# Generated by Django 5.2 on 2025-05-05 10:54

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('geoadmin', '0001_initial'),
        ('projects', '0002_restore_user_relations'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Item_category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='Community_user_mapping',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_primary_community', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_engagement.community')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geoadmin.block')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geoadmin.district')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geoadmin.state')),
            ],
        ),
        migrations.AddField(
            model_name='community',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='community_engagement.location'),
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('media_type', models.CharField(choices=[('IMAGE', 'IMAGE'), ('AUDIO', 'AUDIO'), ('VIDEO', 'VIDEO'), ('DOC', 'DOC')], max_length=255)),
                ('media_path', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('transcript', models.TextField(blank=True, null=True)),
                ('rating', models.PositiveSmallIntegerField(default=0)),
                ('item_type', models.CharField(choices=[('STORY', 'STORY'), ('GRIEVANCE', 'GRIEVANCE'), ('WORK_DEMAND', 'WORK_DEMAND'), ('CONTENT', 'CONTENT')], max_length=255)),
                ('coordinates', models.TextField(blank=True, null=True)),
                ('state', models.CharField(choices=[('PUB', 'PUB'), ('ARC', 'ARC'), ('UNM', 'UNM'), ('REJ', 'REJ')], max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_engagement.community')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='community_engagement.item_category')),
                ('media', models.ManyToManyField(blank=True, to='community_engagement.media')),
            ],
        ),
    ]
