"""
Django settings for nrm_app project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from datetime import timedelta
from pathlib import Path

import environ
from corsheaders.defaults import default_headers

env = environ.Env()

environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG")

# MARK: ODK Login Creds
ODK_USERNAME = env("ODK_USERNAME")
ODK_PASSWORD = env("ODK_PASSWORD")

# MARK: ODK Sync Creds
ODK_USER_EMAIL_SYNC = env("ODK_USER_EMAIL_SYNC")
ODK_USER_PASSWORD_SYNC = env("ODK_USER_PASSWORD_SYNC")

# MARK: DB settings
DB_NAME = env("DB_NAME")
DB_USER = env("DB_USER")
DB_PASSWORD = env("DB_PASSWORD")

USERNAME_GESDISC = env("USERNAME_GESDISC")
PASSWORD_GESDISC = env("PASSWORD_GESDISC")
STATIC_ROOT = "static/"
GEE_HELPER_ACCOUNT_ID = 4
ALLOWED_HOSTS = [
    "geoserver.core-stack.org",
    "127.0.0.1",
    "localhost",
    "0.0.0.0",
    "5cbf08250f1c.ngrok-free.app",
    "api-doc.core-stack.org",
]

# MARK: Django Apps

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # core apps
    "computing",
    "dpr",
    "geoadmin",
    "stats_generator",
    # rest framework for APIs
    "rest_framework",
    "rest_framework_simplejwt",
    "rest_framework_simplejwt.token_blacklist",
    "corsheaders",
    "drf_yasg",
    "rest_framework_api_key",
    # project applications
    "users",
    "organization.apps.OrganizationConfig",
    "projects",
    "plantations",
    "plans",
    "public_api",
    "community_engagement",
    "bot_interface",
    "gee_computing"
]

# MARK: CORS Settings

if DEBUG:
    CORS_ALLOW_ALL_ORIGINS = True
else:
    CORS_ALLOWED_ORIGINS = [
        "http://gramvaanimoderationtest.s3-website.ap-south-1.amazonaws.com",
        "https://nrm.core-stack.org",
        "https://nrm.gramvaanidev.org",
        "https://dashboard.core-stack.org",
        "https://feature-logout-functionality.d2u6quqcimqsuk.amplifyapp.com",
        "https://uat.dashboard.core-stack.org",
        "https://www.explorer.core-stack.org",
        "https://www.explorer.core-stack.org/landscape_explorer",
        "https://development.d2s4eeyazvtd2g.amplifyapp.com",
        "http://127.0.0.1:8000",
        "http://127.0.0.1:3000",
        "http://127.0.0.1",
        "http://localhost:3000",
        "http://localhost:3001",
    ]


CORS_ALLOWED_ORIGIN_REGEXES = [
    r"^http://localhost:\d+$",
    r"^http://127\.0\.0\.1:\d+$",
    r"^http://192\.168\.\d{1,3}\.\d{1,3}(:\d+)?$",
]

CORS_ALLOW_HEADERS = list(default_headers) + [
    "ngrok-skip-browser-warning",
    "content-disposition",  # Important for file uploads in form data
    "X-API-Key"
]

CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

CORS_ALLOW_CREDENTIALS = True

CSRF_TRUSTED_ORIGINS = ["http://localhost:3000"]

# MARK: REST Framework

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.IsAuthenticated",),
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
    ],
}

# MARK: JWT settings
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=60),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=90),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    "UPDATE_LAST_LOGIN": False,
    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "VERIFYING_KEY": None,
    "AUDIENCE": None,
    "ISSUER": None,
    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "JTI_CLAIM": "jti",
}


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "nrm_app.urls"

# MARK: Templates
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "nrm_app.wsgi.application"

DATA_UPLOAD_MAX_NUMBER_FILES = 1000

# MARK: Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": DB_NAME,
        "USER": DB_USER,
        "PASSWORD": DB_PASSWORD,
        "HOST": "127.0.0.1",
        "PORT": "",
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Kolkata"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
AUTH_USER_MODEL = "users.User"

STATIC_URL = "static/"
STATIC_ROOT = "static/"
ASSET_DIR = "/home/ubuntu/cfpt/core-stack-backend/assets/"

# Media files (User uploaded content)
MEDIA_ROOT = os.path.join(BASE_DIR, "data/")
MEDIA_URL = "/media/"

EXCEL_PATH = env("EXCEL_PATH")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# MARK: ODK settings
# https://odk.gramvaani.org/#/projects/9/forms/Add_Settlements_form%20_V1.0.1
OD_DATA_URL_hemlet = "https://odk.gramvaani.org/v1/projects/9/forms/Add_Hamlet_form%20_V1.0.1.svc/Submissions"
OD_DATA_URL_well = (
    "https://odk.gramvaani.org/v1/projects/9/forms/Add_well_form_V1.0.1.svc/Submissions"
)
OD_DATA_URL_wb = "https://odk.gramvaani.org/v1/projects/9/forms/Hamlet_Waterbodies_Form_V1.0.3.svc/Submissions"
OD_DATA_URL_plan = {
    "odk_prop_agri": {
        "odk_url": "https://odk.gramvaani.org/v1/projects/9/forms/NRM_form_Agri_Screen_V1.0.0.svc/Submissions",
        "gps_point": "GPS_point_irrigation_work",
    },
    "odk_prop_wb": {
        "odk_url": "https://odk.gramvaani.org/v1/projects/9/forms/NRM_form_NRM_form_Waterbody_Screen_V1.0.0.svc/Submissions",
        "gps_point": "GPS_point_propose_maintainence",
    },
    "odk_prop_gw": {
        "odk_url": "https://odk.gramvaani.org/v1/projects/9/forms/NRM_form_propose_new_recharge_structure_V1.0.0.svc/Submissions",
        "gps_point": "GPS_point_recharge_structure",
    },
}

import os
import logging

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,  # keep Django's default loggers
    "formatters": {
        "verbose": {
            "format": "[{levelname}] {asctime} {name} | {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname}: {message}",
            "style": "{",
        },
    },
    "handlers": {
        "console": {
            "level": "DEBUG",   # or INFO in production
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
        "file": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "filename": os.path.join(BASE_DIR, "logs", "app.log"),
            "formatter": "verbose",
        },
        "mail_admins": {
            "class": "django.utils.log.AdminEmailHandler",
            "level": "ERROR",
        },
    },
    "root": {  # applies to everything unless overridden
        "handlers": ["console", "file"],
        "level": "INFO",
    },
    "loggers": {
        "django": {
            "handlers": ["console", "file"],
            "level": "INFO",
            "propagate": True,
        },
        "geoadmin": {  # replace with your Django app name
            "handlers": ["console", "file"],
            "level": "DEBUG",
            "propagate": False,
        },
    },
}


# MARK: Report requirements
OVERPASS_URL = env("OVERPASS_URL")

# MARK: Email Settings
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtpout.secureserver.net"
EMAIL_PORT = 465
EMAIL_USE_SSL = True
EMAIL_USE_TLS = False
EMAIL_HOST_USER = env("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")
EMAIL_TIMEOUT = 30

GEOSERVER_URL = env("GEOSERVER_URL")
GEOSERVER_USERNAME = env("GEOSERVER_USERNAME")
GEOSERVER_PASSWORD = env("GEOSERVER_PASSWORD")

EARTH_DATA_USER = env("EARTH_DATA_USER")
EARTH_DATA_PASSWORD = env("EARTH_DATA_PASSWORD")

GEE_SERVICE_ACCOUNT_KEY_PATH = env("GEE_SERVICE_ACCOUNT_KEY_PATH")
GEE_HELPER_SERVICE_ACCOUNT_KEY_PATH = env("GEE_HELPER_SERVICE_ACCOUNT_KEY_PATH")
GEE_DATASETS_SERVICE_ACCOUNT_KEY_PATH = env("GEE_DATASETS_SERVICE_ACCOUNT_KEY_PATH")

LOCAL_COMPUTE_API_URL = env("LOCAL_COMPUTE_API_URL")

# NREGA settings
NREGA_BUCKET = env("NREGA_BUCKET")
NREGA_ACCESS_KEY = env("NREGA_ACCESS_KEY")
NREGA_SECRET_KEY = env("NREGA_SECRET_KEY")

# S3 settings
S3_BUCKET = env("S3_BUCKET")
S3_REGION = env("S3_REGION")

# bot_interface settings
AUTH_TOKEN_360 = env("AUTH_TOKEN_360")
ES_AUTH = env("ES_AUTH")
CALL_PATCH_API_KEY = env("CALL_PATCH_API_KEY")

# Community Engagement API Configuration
COMMUNITY_ENGAGEMENT_API_URL = env("COMMUNITY_ENGAGEMENT_API_URL")
WHATSAPP_MEDIA_PATH = env("WHATSAPP_MEDIA_PATH")

BASE_URL='https://127.0.0.1:8000/'
DEFAULT_FROM_EMAIL = "CoreStackSupport <contact@core-stack.org>"
